version: '3.5'
x-redash-service: &redash-service
  image: redash/redash
  env_file: ./.env
  restart: always
services:
  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd

  minio:
    container_name: milvus-minio
    image: minio/minio
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.2.13
    command: [ "milvus", "run", "standalone" ]
    restart: always
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"
  attu:
    container_name: attu
    image: zilliz/attu:v2.2.7
    environment:
      MILVUS_URL: milvus-standalone:19530
    ports:
      - "8000:3000"
    depends_on:
      - "standalone"

  server:
    <<: *redash-service
    image: redash/redash:latest
    container_name: redash_server
    restart: always
    depends_on:
      - postgres
    ports:
      - "5000:5000"
    command: server
    #Note: run the following script after starting the docker images
    # docker-compose run --rm server create_db

  worker:
    <<: *redash-service
    image: redash/redash:latest
    container_name: redash_worker
    restart: always
    depends_on:
      - server
      - redis
    environment:
      QUEUES: "queries,celery"
      WORKERS_COUNT: 1
    command: worker

  scheduler:
    <<: *redash-service
    image: redash/redash:latest
    container_name: redash_scheduler
    restart: always
    depends_on:
      - server
      - redis
    command: scheduler

  postgres:
    image: postgres:13
    container_name: redash_postgres
    restart: always
    volumes:
      - ./volumes/postgres/data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: redash
      POSTGRES_PASSWORD: redash
      POSTGRES_DB: redash

  redis:
    image: redis:6
    container_name: redash_redis
    restart: always
    ports:
      - "6379:6379"

networks:
  default:
    name: milvus